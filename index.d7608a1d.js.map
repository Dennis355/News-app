{"mappings":"oeAAAA,EAAA,SCEeC,eAAAC,IACb,MAAMC,QAAiBC,MACrB,0GAIF,aAFuBD,EAASE,QACAC,O,CAyBlC,MAAMC,EAAqB,CAACC,EAAOC,KACjC,MAAMC,EAAeF,EAAMG,MAAM,EAAGF,GAC9BG,EAAgBJ,EAAMG,MAAMF,GAAQ,GAE1C,IAAII,EAAc,GAClBA,EAAcH,EAAaI,KACzBC,GACE,wBAAwBA,EAAOC,uBAAuBD,EAAOE,0BAEjEJ,EAAYK,KAAK,oEAGfC,OAAOC,WAAa,IAAM,aAAe,+DAIzCR,EACCE,KACCO,GACE,oDAAoDA,EAAKL,WAAWK,EAAKJ,0BAE5EK,KAAK,6BAKRC,SACGC,eAAe,qBACfC,mBAAmB,YAAaZ,EAAYS,KAAK,KACpD,MAAMI,EAAiBH,SAASI,cAAc,cACxCC,EAAqBL,SAASI,cAAc,0BAMlDD,EAAeG,iBAAiB,SAASC,IACvCA,EAAMC,kBACNH,EAAmBI,UAAUC,OAAO,8BAA8B,IAEpEV,SAASM,iBAAiB,SATF,KAClBD,EAAmBI,UAAUE,SAAS,gCACxCN,EAAmBI,UAAUG,OAAO,8BAA8B,IAWxE,WACE,MAAMC,EAAUb,SAASc,iBAAiB,QAC1C,IAAIC,EAAe,KACnBF,EAAQG,SAAQxB,IACdA,EAAOc,iBAAiB,SAASW,IACV,OAAjBF,GACFA,EAAaN,UAAUG,OAAO,UAEhCpB,EAAOiB,UAAUS,IAAI,UACrBH,EAAevB,CAAM,GACrB,G,CAbJ2B,EAAgB,GA9DlBzC,iBACE,IAAI0C,EAAkB,EAClBxB,OAAOC,WAAa,KACtBlB,IAAkB0C,MAAKC,IACrBtC,EAAmBsC,EAAcF,EAAgB,IAGjDxB,OAAOC,YAAc,KAAOD,OAAOC,WAAa,OAClDuB,EAAkB,EAClBzC,IAAkB0C,MAAKC,IACrBtC,EAAmBsC,EAAcF,EAAgB,KAGjDxB,OAAOC,YAAc,OACvBuB,EAAkB,EAClBzC,IAAkB0C,MAAKC,IACrBtC,EAAmBsC,EAAcF,EAAgB,I,CA8DvDG,GAYA3B,OAAOU,iBAAiB,UAVH,KACnB,IAAIkB,EAAUxB,SAASI,cAAc,kBACrC,MAAMqB,EAAc7B,OAAOC,WAEzB2B,EAAQE,YADND,EAAc,IACM,aAEA,QAAQ,I,WCjGlC,IAAAE,EAAAlD,EAAA,S,WFQA,MAAMmD,EAAa,IEHJ,MAIblD,sBAIE,aAHuBG,MACrB,gHAEcC,M,CAElBJ,2BAIE,aAHuBG,MACrB,uDAAuDgD,KAAKC,gBAAgBD,KAAKE,kEAEnEjD,M,CAElBJ,0BAA0BsD,GAuBtB,MAtBoB,+EAEmBC,KAAKC,MACzCF,EAASG,KAAKC,iHAITJ,EAASK,QAAQ,GAAGF,oIAI1BH,EAASM,0GAKTN,EAASK,QAAQ,GAAGE,qBACLP,EAASK,QAAQ,GAAGG,0EACR,EAAAb,EAAAc,QAAO,IAAIC,KAAQ,oDACnB,EAAAf,EAAAc,QAAO,IAAIC,KAAQ,wJ,CAnCpDC,cACGd,KAAKC,SAAW,GAAMD,KAAKE,UAAY,E,GFO5Ca,UAAUC,YAAYC,oBAEtBpE,eAAiCqE,GAI/B,OAHAnB,EAAWE,SAAWiB,EAAIC,OAAOlB,SACjCF,EAAWG,UAAYgB,EAAIC,OAAOjB,UAE3BH,EAAWqB,qBAAqB5B,MAAKW,IAC1CJ,EAAWsB,oBAAoBlB,EAAS,G,IAG5C,WACEJ,EACGuB,gBACA9B,MAAKW,GAAYJ,EAAWsB,oBAAoBlB,I","sources":["src/js/index.js","src/js/filter.js","src/js/weather-api.js"],"sourcesContent":["import './header';\n\nimport './filter';\nimport './markup';\n\nimport WEATHER_API from './weather-api';\n\n\nconst weatherApi = new WEATHER_API();\n\n\n\n\n\nnavigator.geolocation.getCurrentPosition(onLocationSuccess, onLocationError);\n\nasync function onLocationSuccess(pos) {\n  weatherApi.latitude = pos.coords.latitude;\n  weatherApi.longitude = pos.coords.longitude;\n\n  return weatherApi.fetchWidthLocation().then(response => {\n    weatherApi.createWeatherMarkup(response);\n  });\n}\nfunction onLocationError() {\n  weatherApi\n    .standartFetch()\n    .then(response => weatherApi.createWeatherMarkup(response));\n}\n\nimport './news-text-hiding';\n\n","const KEY = 'A3GIIfyPWHBvfJdoXANwrFAEAGEQbzXw';\n\nexport default async function getCategoryList() {\n  const fetchApi = await fetch(\n    `https://api.nytimes.com/svc/news/v3/content/section-list.json?api-key=${KEY}`\n  );\n  const response = await fetchApi.json();\n  const categoriesAray = response.results;\n  return categoriesAray;\n}\n\nasync function renderCategoryList() {\n  let buttonsQuantity = 0;\n  if (window.innerWidth < 768) {\n    getCategoryList().then(categoryList => {\n      renderMarkupFilter(categoryList, buttonsQuantity);\n    });\n  }\n  if (window.innerWidth >= 768 && window.innerWidth < 1280) {\n    buttonsQuantity = 4;\n    getCategoryList().then(categoryList => {\n      renderMarkupFilter(categoryList, buttonsQuantity);\n    });\n  }\n  if (window.innerWidth >= 1280) {\n    buttonsQuantity = 6;\n    getCategoryList().then(categoryList => {\n      renderMarkupFilter(categoryList, buttonsQuantity);\n    });\n  }\n}\n\nconst renderMarkupFilter = (array, amount) => {\n  const buttonsArray = array.slice(0, amount);\n  const dropdownArray = array.slice(amount, -1);\n\n  let readyMarkup = [];\n  readyMarkup = buttonsArray.map(\n    button =>\n      `<button data-section=${button.section} class=\"btn\">${button.display_name}</button>`\n  );\n  readyMarkup.push(`\n    <div class=\"btn show-more\">\n  <span class=\"show-more_btn\">${\n    window.innerWidth < 768 ? 'Categories' : 'Others'\n  }</span>\n\n  <div class=\"show-more__categories\">\n  ${dropdownArray\n    .map(\n      item =>\n        `<button class=\"show-more__category\" data-section=${item.section}>${item.display_name}</button>`\n    )\n    .join('')}\n  </div>\n</div>\n  `);\n\n  document\n    .getElementById('buttons-container')\n    .insertAdjacentHTML('beforeend', readyMarkup.join(''));\n  const showMoreButton = document.querySelector('.show-more');\n  const showMoreCategories = document.querySelector('.show-more__categories');\n  const closeCategories = () => {\n    if (showMoreCategories.classList.contains('show-more__categories--open')) {\n      showMoreCategories.classList.remove('show-more__categories--open');\n    }\n  };\n  showMoreButton.addEventListener('click', event => {\n    event.stopPropagation();\n    showMoreCategories.classList.toggle('show-more__categories--open');\n  });\n  document.addEventListener('click', closeCategories);\n  onClickSection();\n};\n\nfunction onClickSection() {\n  const buttons = document.querySelectorAll('.btn');\n  let activeButton = null;\n  buttons.forEach(button => {\n    button.addEventListener('click', e => {\n      if (activeButton !== null) {\n        activeButton.classList.remove('active');\n      }\n      button.classList.add('active');\n      activeButton = button;\n    });\n  });\n}\nrenderCategoryList();\n\nconst handleResize = () => {\n  let nameBtn = document.querySelector('.show-more_btn');\n  const windowWidth = window.innerWidth;\n  if (windowWidth < 768) {\n    nameBtn.textContent = 'Categories';\n  } else {\n    nameBtn.textContent = 'Others';\n  }\n};\n\nwindow.addEventListener('resize', handleResize);\n","const API_KEY = '94b2a12c85f4ec978a20428df76a9098';\nimport { format } from 'date-fns';\n\n\n\nexport default class WEATHER_API {\n  constructor() {\n    (this.latitude = ''), (this.longitude = '');\n  }\n  async standartFetch() {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=praha&units=metric&appid=${API_KEY}`\n    );\n    return response.json();\n  }\n  async fetchWidthLocation() {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${this.latitude}&lon=${this.longitude}&units=metric&appid=${API_KEY}`\n    );\n    return response.json();\n  }\n  async createWeatherMarkup(response) {\n    const weatherMarkup = `\n   <div class=\"weather-info\">\n       <span class=\"weather-info__degrees\">${Math.floor(\n         response.main.temp\n       )}Â°</span>\n        <div class=\"weather-info__group\">\n            <span class=\"weather-info__description\">${\n              response.weather[0].main\n            }</span>\n            <span class=\"weather-info__location\"><svg>\n    <use href=\"../images/sprite.svg#location\"></use>\n</svg>${response.name}</span>\n        </div>\n        \n      </div>\n      <img src=\"https://openweathermap.org/img/wn/${\n        response.weather[0].icon\n      }@4x.png\" alt=\"${response.weather[0].description}\" class=\"weather-img\" />\n      <span class=\"weather-date\">${format(new Date(), 'eee')}</span>\n      <span class=\"weather-date\">${format(new Date(), 'dd LLL y')}</span>\n      <a href=\"https://www.accuweather.com/en\" class=\"weather-link\" target=\"_blank\" rel=\"noreferrer noopener\">weather for week</a>`;\n    \n      return weatherMarkup\n  }\n}\n"],"names":["parcelRequire","async","$cc8167df025acb14$export$2e2bcd8739ae039","fetchApi","fetch","json","results","$cc8167df025acb14$var$renderMarkupFilter","array","amount","buttonsArray","slice","dropdownArray","readyMarkup","map","button","section","display_name","push","window","innerWidth","item","join","document","getElementById","insertAdjacentHTML","showMoreButton","querySelector","showMoreCategories","addEventListener","event","stopPropagation","classList","toggle","contains","remove","buttons","querySelectorAll","activeButton","forEach","e","add","$cc8167df025acb14$var$onClickSection","buttonsQuantity","then","categoryList","$cc8167df025acb14$var$renderCategoryList","nameBtn","windowWidth","textContent","$46BsY","$85a5f86b715fe7db$var$weatherApi","this","latitude","longitude","response","Math","floor","main","temp","weather","name","icon","description","format","Date","constructor","navigator","geolocation","getCurrentPosition","pos","coords","fetchWidthLocation","createWeatherMarkup","standartFetch"],"version":3,"file":"index.d7608a1d.js.map"}